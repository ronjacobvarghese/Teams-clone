{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { estimateScrollWidth } from '@material/dom/ponyfill';\nimport { MDCFloatingLabelFoundation } from './foundation';\n\nvar MDCFloatingLabel =\n/** @class */\nfunction (_super) {\n  __extends(MDCFloatingLabel, _super);\n\n  function MDCFloatingLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCFloatingLabel.attachTo = function (root) {\n    return new MDCFloatingLabel(root);\n  };\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param shouldShake If true, shakes the label by adding a CSS class; otherwise, stops shaking by removing the class.\n   */\n\n\n  MDCFloatingLabel.prototype.shake = function (shouldShake) {\n    this.foundation.shake(shouldShake);\n  };\n  /**\n   * Styles the label to float/dock.\n   * @param shouldFloat If true, floats the label by adding a CSS class; otherwise, docks it by removing the class.\n   */\n\n\n  MDCFloatingLabel.prototype.float = function (shouldFloat) {\n    this.foundation.float(shouldFloat);\n  };\n  /**\n   * Styles the label as required.\n   * @param isRequired If true, adds an asterisk to the label, indicating that it is required.\n   */\n\n\n  MDCFloatingLabel.prototype.setRequired = function (isRequired) {\n    this.foundation.setRequired(isRequired);\n  };\n\n  MDCFloatingLabel.prototype.getWidth = function () {\n    return this.foundation.getWidth();\n  };\n\n  MDCFloatingLabel.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root.classList.remove(className);\n      },\n      getWidth: function () {\n        return estimateScrollWidth(_this.root);\n      },\n      registerInteractionHandler: function (evtType, handler) {\n        return _this.listen(evtType, handler);\n      },\n      deregisterInteractionHandler: function (evtType, handler) {\n        return _this.unlisten(evtType, handler);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCFloatingLabelFoundation(adapter);\n  };\n\n  return MDCFloatingLabel;\n}(MDCComponent);\n\nexport { MDCFloatingLabel };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAEH,SAAQ,YAAR,QAA2B,0BAA3B;AACA,SAAQ,mBAAR,QAAkC,wBAAlC;AAEA,SAAQ,0BAAR,QAAyC,cAAzC;;AAIA,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAAtC,WAAA,gBAAA,GAAA;;AAiDC;;AAhDQ,EAAA,gBAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAA6B;AAC3B,WAAO,IAAI,gBAAJ,CAAqB,IAArB,CAAP;AACD,GAFM;AAIP;;;AAGG;;;AACH,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,WAAN,EAA0B;AACxB,SAAK,UAAL,CAAgB,KAAhB,CAAsB,WAAtB;AACD,GAFD;AAIA;;;AAGG;;;AACH,EAAA,gBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,WAAN,EAA0B;AACxB,SAAK,UAAL,CAAgB,KAAhB,CAAsB,WAAtB;AACD,GAFD;AAIA;;;AAGG;;;AACH,EAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,UAAZ,EAA+B;AAC7B,SAAK,UAAL,CAAgB,WAAhB,CAA4B,UAA5B;AACD,GAFD;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,KAAK,UAAL,CAAgB,QAAhB,EAAP;AACD,GAFD;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA,CAAA,CACE;AACA;AACA;;;AACA,QAAM,OAAO,GAA4B;AACvC,MAAA,QAAQ,EAAE,UAAC,SAAD,EAAU;AAAK,eAAA,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,GAApB,CAAA,SAAA,CAAA;AAAkC,OADpB;AAEvC,MAAA,WAAW,EAAE,UAAC,SAAD,EAAU;AAAK,eAAA,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,MAApB,CAAA,SAAA,CAAA;AAAqC,OAF1B;AAGvC,MAAA,QAAQ,EAAE,YAAA;AAAM,eAAA,mBAAmB,CAAC,KAAI,CAAxB,IAAmB,CAAnB;AAA8B,OAHP;AAIvC,MAAA,0BAA0B,EAAE,UAAC,OAAD,EAAU,OAAV,EAAiB;AACzC,eAAA,KAAI,CAAC,MAAL,CAAY,OAAZ,EAAqB,OAArB,CAAA;AAA6B,OALM;AAMvC,MAAA,4BAA4B,EAAE,UAAC,OAAD,EAAU,OAAV,EAAiB;AAC3C,eAAA,KAAI,CAAC,QAAL,CAAc,OAAd,EAAuB,OAAvB,CAAA;AAA+B;AAPI,KAAzC,CAJF,CAaE;;AACA,WAAO,IAAI,0BAAJ,CAA+B,OAA/B,CAAP;AACD,GAfD;;AAgBF,SAAA,gBAAA;AAAC,CAjDD,CAAsC,YAAtC,CAAA","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { estimateScrollWidth } from '@material/dom/ponyfill';\nimport { MDCFloatingLabelFoundation } from './foundation';\nvar MDCFloatingLabel = /** @class */ (function (_super) {\n    __extends(MDCFloatingLabel, _super);\n    function MDCFloatingLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCFloatingLabel.attachTo = function (root) {\n        return new MDCFloatingLabel(root);\n    };\n    /**\n     * Styles the label to produce the label shake for errors.\n     * @param shouldShake If true, shakes the label by adding a CSS class; otherwise, stops shaking by removing the class.\n     */\n    MDCFloatingLabel.prototype.shake = function (shouldShake) {\n        this.foundation.shake(shouldShake);\n    };\n    /**\n     * Styles the label to float/dock.\n     * @param shouldFloat If true, floats the label by adding a CSS class; otherwise, docks it by removing the class.\n     */\n    MDCFloatingLabel.prototype.float = function (shouldFloat) {\n        this.foundation.float(shouldFloat);\n    };\n    /**\n     * Styles the label as required.\n     * @param isRequired If true, adds an asterisk to the label, indicating that it is required.\n     */\n    MDCFloatingLabel.prototype.setRequired = function (isRequired) {\n        this.foundation.setRequired(isRequired);\n    };\n    MDCFloatingLabel.prototype.getWidth = function () {\n        return this.foundation.getWidth();\n    };\n    MDCFloatingLabel.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            getWidth: function () { return estimateScrollWidth(_this.root); },\n            registerInteractionHandler: function (evtType, handler) {\n                return _this.listen(evtType, handler);\n            },\n            deregisterInteractionHandler: function (evtType, handler) {\n                return _this.unlisten(evtType, handler);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCFloatingLabelFoundation(adapter);\n    };\n    return MDCFloatingLabel;\n}(MDCComponent));\nexport { MDCFloatingLabel };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}