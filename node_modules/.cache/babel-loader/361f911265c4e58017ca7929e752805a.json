{"ast":null,"code":"/**\n * Stores result from supportsCssVariables to avoid redundant processing to\n * detect CSS custom variable support.\n */\nvar supportsCssVariables_;\nexport function supportsCssVariables(windowObj, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n\n  var CSS = windowObj.CSS;\n  var supportsCssVars = supportsCssVariables_;\n\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables_;\n  }\n\n  var supportsFunctionPresent = CSS && typeof CSS.supports === 'function';\n\n  if (!supportsFunctionPresent) {\n    return false;\n  }\n\n  var explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n\n  var weAreFeatureDetectingSafari10plus = CSS.supports('(--css-vars: yes)') && CSS.supports('color', '#00000000');\n  supportsCssVars = explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus;\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVars;\n  }\n\n  return supportsCssVars;\n}\nexport function getNormalizedEventCoords(evt, pageOffset, clientRect) {\n  if (!evt) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var x = pageOffset.x,\n      y = pageOffset.y;\n  var documentX = x + clientRect.left;\n  var documentY = y + clientRect.top;\n  var normalizedX;\n  var normalizedY; // Determine touch point relative to the ripple container.\n\n  if (evt.type === 'touchstart') {\n    var touchEvent = evt;\n    normalizedX = touchEvent.changedTouches[0].pageX - documentX;\n    normalizedY = touchEvent.changedTouches[0].pageY - documentY;\n  } else {\n    var mouseEvent = evt;\n    normalizedX = mouseEvent.pageX - documentX;\n    normalizedY = mouseEvent.pageY - documentY;\n  }\n\n  return {\n    x: normalizedX,\n    y: normalizedY\n  };\n}","map":{"version":3,"sources":["util.ts"],"names":[],"mappings":"AAwBA;;;AAGG;AACH,IAAI,qBAAJ;AAEA,OAAM,SAAU,oBAAV,CAA+B,SAA/B,EAA6D,YAA7D,EAAiF;AAApB,MAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,KAAA;AAAoB;;AAC9E,MAAA,GAAG,GAAI,SAAS,CAAb,GAAH;AACP,MAAI,eAAe,GAAG,qBAAtB;;AACA,MAAI,OAAO,qBAAP,KAAiC,SAAjC,IAA8C,CAAC,YAAnD,EAAiE;AAC/D,WAAO,qBAAP;AACD;;AAED,MAAM,uBAAuB,GAAG,GAAG,IAAI,OAAO,GAAG,CAAC,QAAX,KAAwB,UAA/D;;AACA,MAAI,CAAC,uBAAL,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAM,yBAAyB,GAAG,GAAG,CAAC,QAAJ,CAAa,YAAb,EAA2B,KAA3B,CAAlC,CAZqF,CAarF;AACA;;AACA,MAAM,iCAAiC,GACnC,GAAG,CAAC,QAAJ,CAAa,mBAAb,KACA,GAAG,CAAC,QAAJ,CAAa,OAAb,EAAsB,WAAtB,CAFJ;AAKA,EAAA,eAAe,GACX,yBAAyB,IAAI,iCADjC;;AAGA,MAAI,CAAC,YAAL,EAAmB;AACjB,IAAA,qBAAqB,GAAG,eAAxB;AACD;;AACD,SAAO,eAAP;AACD;AAED,OAAM,SAAU,wBAAV,CAAmC,GAAnC,EAA2D,UAA3D,EAAuF,UAAvF,EAA6G;AAEjH,MAAI,CAAC,GAAL,EAAU;AACR,WAAO;AAAC,MAAA,CAAC,EAAE,CAAJ;AAAO,MAAA,CAAC,EAAE;AAAV,KAAP;AACD;;AACM,MAAA,CAAC,GAAO,UAAU,CAAjB,CAAD;AAAA,MAAG,CAAC,GAAI,UAAU,CAAd,CAAJ;AACP,MAAM,SAAS,GAAG,CAAC,GAAG,UAAU,CAAC,IAAjC;AACA,MAAM,SAAS,GAAG,CAAC,GAAG,UAAU,CAAC,GAAjC;AAEA,MAAI,WAAJ;AACA,MAAI,WAAJ,CAViH,CAWjH;;AACA,MAAI,GAAG,CAAC,IAAJ,KAAa,YAAjB,EAA+B;AAC7B,QAAM,UAAU,GAAG,GAAnB;AACA,IAAA,WAAW,GAAG,UAAU,CAAC,cAAX,CAA0B,CAA1B,EAA6B,KAA7B,GAAqC,SAAnD;AACA,IAAA,WAAW,GAAG,UAAU,CAAC,cAAX,CAA0B,CAA1B,EAA6B,KAA7B,GAAqC,SAAnD;AACD,GAJD,MAIO;AACL,QAAM,UAAU,GAAG,GAAnB;AACA,IAAA,WAAW,GAAG,UAAU,CAAC,KAAX,GAAmB,SAAjC;AACA,IAAA,WAAW,GAAG,UAAU,CAAC,KAAX,GAAmB,SAAjC;AACD;;AAED,SAAO;AAAC,IAAA,CAAC,EAAE,WAAJ;AAAiB,IAAA,CAAC,EAAE;AAApB,GAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * Stores result from supportsCssVariables to avoid redundant processing to\n * detect CSS custom variable support.\n */\nvar supportsCssVariables_;\nexport function supportsCssVariables(windowObj, forceRefresh) {\n    if (forceRefresh === void 0) { forceRefresh = false; }\n    var CSS = windowObj.CSS;\n    var supportsCssVars = supportsCssVariables_;\n    if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n        return supportsCssVariables_;\n    }\n    var supportsFunctionPresent = CSS && typeof CSS.supports === 'function';\n    if (!supportsFunctionPresent) {\n        return false;\n    }\n    var explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes');\n    // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n    // See: README section on Safari\n    var weAreFeatureDetectingSafari10plus = (CSS.supports('(--css-vars: yes)') &&\n        CSS.supports('color', '#00000000'));\n    supportsCssVars =\n        explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus;\n    if (!forceRefresh) {\n        supportsCssVariables_ = supportsCssVars;\n    }\n    return supportsCssVars;\n}\nexport function getNormalizedEventCoords(evt, pageOffset, clientRect) {\n    if (!evt) {\n        return { x: 0, y: 0 };\n    }\n    var x = pageOffset.x, y = pageOffset.y;\n    var documentX = x + clientRect.left;\n    var documentY = y + clientRect.top;\n    var normalizedX;\n    var normalizedY;\n    // Determine touch point relative to the ripple container.\n    if (evt.type === 'touchstart') {\n        var touchEvent = evt;\n        normalizedX = touchEvent.changedTouches[0].pageX - documentX;\n        normalizedY = touchEvent.changedTouches[0].pageY - documentY;\n    }\n    else {\n        var mouseEvent = evt;\n        normalizedX = mouseEvent.pageX - documentX;\n        normalizedY = mouseEvent.pageY - documentY;\n    }\n    return { x: normalizedX, y: normalizedY };\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}