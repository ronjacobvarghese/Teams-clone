{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nimport { getNormalizedEventCoords } from './util'; // Activation events registered on the root element of each instance for activation\n\nvar ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs\n\nvar POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // simultaneous nested activations\n\nvar activatedTargets = [];\n\nvar MDCRippleFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCRippleFoundation, _super);\n\n  function MDCRippleFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCRippleFoundation.defaultAdapter), adapter)) || this;\n\n    _this.activationAnimationHasEnded_ = false;\n    _this.activationTimer_ = 0;\n    _this.fgDeactivationRemovalTimer_ = 0;\n    _this.fgScale_ = '0';\n    _this.frame_ = {\n      width: 0,\n      height: 0\n    };\n    _this.initialSize_ = 0;\n    _this.layoutFrame_ = 0;\n    _this.maxRadius_ = 0;\n    _this.unboundedCoords_ = {\n      left: 0,\n      top: 0\n    };\n    _this.activationState_ = _this.defaultActivationState_();\n\n    _this.activationTimerCallback_ = function () {\n      _this.activationAnimationHasEnded_ = true;\n\n      _this.runDeactivationUXLogicIfReady_();\n    };\n\n    _this.activateHandler_ = function (e) {\n      return _this.activate_(e);\n    };\n\n    _this.deactivateHandler_ = function () {\n      return _this.deactivate_();\n    };\n\n    _this.focusHandler_ = function () {\n      return _this.handleFocus();\n    };\n\n    _this.blurHandler_ = function () {\n      return _this.handleBlur();\n    };\n\n    _this.resizeHandler_ = function () {\n      return _this.layout();\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCRippleFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCRippleFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCRippleFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCRippleFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        browserSupportsCssVars: function () {\n          return true;\n        },\n        computeBoundingRect: function () {\n          return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            width: 0,\n            height: 0\n          };\n        },\n        containsEventTarget: function () {\n          return true;\n        },\n        deregisterDocumentInteractionHandler: function () {\n          return undefined;\n        },\n        deregisterInteractionHandler: function () {\n          return undefined;\n        },\n        deregisterResizeHandler: function () {\n          return undefined;\n        },\n        getWindowPageOffset: function () {\n          return {\n            x: 0,\n            y: 0\n          };\n        },\n        isSurfaceActive: function () {\n          return true;\n        },\n        isSurfaceDisabled: function () {\n          return true;\n        },\n        isUnbounded: function () {\n          return true;\n        },\n        registerDocumentInteractionHandler: function () {\n          return undefined;\n        },\n        registerInteractionHandler: function () {\n          return undefined;\n        },\n        registerResizeHandler: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        updateCssVariable: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCRippleFoundation.prototype.init = function () {\n    var _this = this;\n\n    var supportsPressRipple = this.supportsPressRipple_();\n    this.registerRootHandlers_(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      var _a = MDCRippleFoundation.cssClasses,\n          ROOT_1 = _a.ROOT,\n          UNBOUNDED_1 = _a.UNBOUNDED;\n      requestAnimationFrame(function () {\n        _this.adapter.addClass(ROOT_1);\n\n        if (_this.adapter.isUnbounded()) {\n          _this.adapter.addClass(UNBOUNDED_1); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n\n\n          _this.layoutInternal_();\n        }\n      });\n    }\n  };\n\n  MDCRippleFoundation.prototype.destroy = function () {\n    var _this = this;\n\n    if (this.supportsPressRipple_()) {\n      if (this.activationTimer_) {\n        clearTimeout(this.activationTimer_);\n        this.activationTimer_ = 0;\n        this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer_) {\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.fgDeactivationRemovalTimer_ = 0;\n        this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      var _a = MDCRippleFoundation.cssClasses,\n          ROOT_2 = _a.ROOT,\n          UNBOUNDED_2 = _a.UNBOUNDED;\n      requestAnimationFrame(function () {\n        _this.adapter.removeClass(ROOT_2);\n\n        _this.adapter.removeClass(UNBOUNDED_2);\n\n        _this.removeCssVars_();\n      });\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n  };\n  /**\n   * @param evt Optional event containing position information.\n   */\n\n\n  MDCRippleFoundation.prototype.activate = function (evt) {\n    this.activate_(evt);\n  };\n\n  MDCRippleFoundation.prototype.deactivate = function () {\n    this.deactivate_();\n  };\n\n  MDCRippleFoundation.prototype.layout = function () {\n    var _this = this;\n\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n\n    this.layoutFrame_ = requestAnimationFrame(function () {\n      _this.layoutInternal_();\n\n      _this.layoutFrame_ = 0;\n    });\n  };\n\n  MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {\n    var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n\n    if (unbounded) {\n      this.adapter.addClass(UNBOUNDED);\n    } else {\n      this.adapter.removeClass(UNBOUNDED);\n    }\n  };\n\n  MDCRippleFoundation.prototype.handleFocus = function () {\n    var _this = this;\n\n    requestAnimationFrame(function () {\n      return _this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n    });\n  };\n\n  MDCRippleFoundation.prototype.handleBlur = function () {\n    var _this = this;\n\n    requestAnimationFrame(function () {\n      return _this.adapter.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n    });\n  };\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   */\n\n\n  MDCRippleFoundation.prototype.supportsPressRipple_ = function () {\n    return this.adapter.browserSupportsCssVars();\n  };\n\n  MDCRippleFoundation.prototype.defaultActivationState_ = function () {\n    return {\n      activationEvent: undefined,\n      hasDeactivationUXRun: false,\n      isActivated: false,\n      isProgrammatic: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false\n    };\n  };\n  /**\n   * supportsPressRipple Passed from init to save a redundant function call\n   */\n\n\n  MDCRippleFoundation.prototype.registerRootHandlers_ = function (supportsPressRipple) {\n    var _this = this;\n\n    if (supportsPressRipple) {\n      ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n        _this.adapter.registerInteractionHandler(evtType, _this.activateHandler_);\n      });\n\n      if (this.adapter.isUnbounded()) {\n        this.adapter.registerResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    this.adapter.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter.registerInteractionHandler('blur', this.blurHandler_);\n  };\n\n  MDCRippleFoundation.prototype.registerDeactivationHandlers_ = function (evt) {\n    var _this = this;\n\n    if (evt.type === 'keydown') {\n      this.adapter.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n        _this.adapter.registerDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n      });\n    }\n  };\n\n  MDCRippleFoundation.prototype.deregisterRootHandlers_ = function () {\n    var _this = this;\n\n    ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n      _this.adapter.deregisterInteractionHandler(evtType, _this.activateHandler_);\n    });\n    this.adapter.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter.isUnbounded()) {\n      this.adapter.deregisterResizeHandler(this.resizeHandler_);\n    }\n  };\n\n  MDCRippleFoundation.prototype.deregisterDeactivationHandlers_ = function () {\n    var _this = this;\n\n    this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n      _this.adapter.deregisterDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n    });\n  };\n\n  MDCRippleFoundation.prototype.removeCssVars_ = function () {\n    var _this = this;\n\n    var rippleStrings = MDCRippleFoundation.strings;\n    var keys = Object.keys(rippleStrings);\n    keys.forEach(function (key) {\n      if (key.indexOf('VAR_') === 0) {\n        _this.adapter.updateCssVariable(rippleStrings[key], null);\n      }\n    });\n  };\n\n  MDCRippleFoundation.prototype.activate_ = function (evt) {\n    var _this = this;\n\n    if (this.adapter.isSurfaceDisabled()) {\n      return;\n    }\n\n    var activationState = this.activationState_;\n\n    if (activationState.isActivated) {\n      return;\n    } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n\n\n    var previousActivationEvent = this.previousActivationEvent_;\n    var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = evt === undefined;\n    activationState.activationEvent = evt;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');\n    var hasActivatedChild = evt !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {\n      return _this.adapter.containsEventTarget(target);\n    });\n\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (evt !== undefined) {\n      activatedTargets.push(evt.target);\n      this.registerDeactivationHandlers_(evt);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(evt);\n\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(function () {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && evt !== undefined && (evt.key === ' ' || evt.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = _this.checkElementMadeActive_(evt);\n\n        if (activationState.wasElementMadeActive) {\n          _this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        _this.activationState_ = _this.defaultActivationState_();\n      }\n    });\n  };\n\n  MDCRippleFoundation.prototype.checkElementMadeActive_ = function (evt) {\n    return evt !== undefined && evt.type === 'keydown' ? this.adapter.isSurfaceActive() : true;\n  };\n\n  MDCRippleFoundation.prototype.animateActivation_ = function () {\n    var _this = this;\n\n    var _a = MDCRippleFoundation.strings,\n        VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START,\n        VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;\n    var _b = MDCRippleFoundation.cssClasses,\n        FG_DEACTIVATION = _b.FG_DEACTIVATION,\n        FG_ACTIVATION = _b.FG_ACTIVATION;\n    var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n    this.layoutInternal_();\n    var translateStart = '';\n    var translateEnd = '';\n\n    if (!this.adapter.isUnbounded()) {\n      var _c = this.getFgTranslationCoordinates_(),\n          startPoint = _c.startPoint,\n          endPoint = _c.endPoint;\n\n      translateStart = startPoint.x + \"px, \" + startPoint.y + \"px\";\n      translateEnd = endPoint.x + \"px, \" + endPoint.y + \"px\";\n    }\n\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations\n\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.\n\n    this.adapter.computeBoundingRect();\n    this.adapter.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(function () {\n      return _this.activationTimerCallback_();\n    }, DEACTIVATION_TIMEOUT_MS);\n  };\n\n  MDCRippleFoundation.prototype.getFgTranslationCoordinates_ = function () {\n    var _a = this.activationState_,\n        activationEvent = _a.activationEvent,\n        wasActivatedByPointer = _a.wasActivatedByPointer;\n    var startPoint;\n\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(activationEvent, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect());\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2\n      };\n    } // Center the element around the start point.\n\n\n    startPoint = {\n      x: startPoint.x - this.initialSize_ / 2,\n      y: startPoint.y - this.initialSize_ / 2\n    };\n    var endPoint = {\n      x: this.frame_.width / 2 - this.initialSize_ / 2,\n      y: this.frame_.height / 2 - this.initialSize_ / 2\n    };\n    return {\n      startPoint: startPoint,\n      endPoint: endPoint\n    };\n  };\n\n  MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady_ = function () {\n    var _this = this; // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n\n\n    var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n    var _a = this.activationState_,\n        hasDeactivationUXRun = _a.hasDeactivationUXRun,\n        isActivated = _a.isActivated;\n    var activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(function () {\n        _this.adapter.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  };\n\n  MDCRippleFoundation.prototype.rmBoundedActivationClasses_ = function () {\n    var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n    this.adapter.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter.computeBoundingRect();\n  };\n\n  MDCRippleFoundation.prototype.resetActivationState_ = function () {\n    var _this = this;\n\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n\n    setTimeout(function () {\n      return _this.previousActivationEvent_ = undefined;\n    }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  };\n\n  MDCRippleFoundation.prototype.deactivate_ = function () {\n    var _this = this;\n\n    var activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.\n\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    var state = __assign({}, activationState);\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(function () {\n        return _this.animateDeactivation_(state);\n      });\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(function () {\n        _this.activationState_.hasDeactivationUXRun = true;\n\n        _this.animateDeactivation_(state);\n\n        _this.resetActivationState_();\n      });\n    }\n  };\n\n  MDCRippleFoundation.prototype.animateDeactivation_ = function (_a) {\n    var wasActivatedByPointer = _a.wasActivatedByPointer,\n        wasElementMadeActive = _a.wasElementMadeActive;\n\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  };\n\n  MDCRippleFoundation.prototype.layoutInternal_ = function () {\n    var _this = this;\n\n    this.frame_ = this.adapter.computeBoundingRect();\n    var maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n\n    var getBoundedRadius = function () {\n      var hypotenuse = Math.sqrt(Math.pow(_this.frame_.width, 2) + Math.pow(_this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n\n    var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE); // Unbounded ripple size should always be even number to equally center align.\n\n    if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n      this.initialSize_ = initialSize - 1;\n    } else {\n      this.initialSize_ = initialSize;\n    }\n\n    this.fgScale_ = \"\" + this.maxRadius_ / this.initialSize_;\n    this.updateLayoutCssVars_();\n  };\n\n  MDCRippleFoundation.prototype.updateLayoutCssVars_ = function () {\n    var _a = MDCRippleFoundation.strings,\n        VAR_FG_SIZE = _a.VAR_FG_SIZE,\n        VAR_LEFT = _a.VAR_LEFT,\n        VAR_TOP = _a.VAR_TOP,\n        VAR_FG_SCALE = _a.VAR_FG_SCALE;\n    this.adapter.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + \"px\");\n    this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),\n        top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)\n      };\n      this.adapter.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + \"px\");\n      this.adapter.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + \"px\");\n    }\n  };\n\n  return MDCRippleFoundation;\n}(MDCFoundation);\n\nexport { MDCRippleFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCRippleFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nimport { getNormalizedEventCoords } from './util';\n// Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES = [\n    'touchstart', 'pointerdown', 'mousedown', 'keydown',\n];\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES = [\n    'touchend', 'pointerup', 'mouseup', 'contextmenu',\n];\n// simultaneous nested activations\nvar activatedTargets = [];\nvar MDCRippleFoundation = /** @class */ (function (_super) {\n    __extends(MDCRippleFoundation, _super);\n    function MDCRippleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCRippleFoundation.defaultAdapter), adapter)) || this;\n        _this.activationAnimationHasEnded_ = false;\n        _this.activationTimer_ = 0;\n        _this.fgDeactivationRemovalTimer_ = 0;\n        _this.fgScale_ = '0';\n        _this.frame_ = { width: 0, height: 0 };\n        _this.initialSize_ = 0;\n        _this.layoutFrame_ = 0;\n        _this.maxRadius_ = 0;\n        _this.unboundedCoords_ = { left: 0, top: 0 };\n        _this.activationState_ = _this.defaultActivationState_();\n        _this.activationTimerCallback_ = function () {\n            _this.activationAnimationHasEnded_ = true;\n            _this.runDeactivationUXLogicIfReady_();\n        };\n        _this.activateHandler_ = function (e) { return _this.activate_(e); };\n        _this.deactivateHandler_ = function () { return _this.deactivate_(); };\n        _this.focusHandler_ = function () { return _this.handleFocus(); };\n        _this.blurHandler_ = function () { return _this.handleBlur(); };\n        _this.resizeHandler_ = function () { return _this.layout(); };\n        return _this;\n    }\n    Object.defineProperty(MDCRippleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                browserSupportsCssVars: function () { return true; },\n                computeBoundingRect: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },\n                containsEventTarget: function () { return true; },\n                deregisterDocumentInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                deregisterResizeHandler: function () { return undefined; },\n                getWindowPageOffset: function () { return ({ x: 0, y: 0 }); },\n                isSurfaceActive: function () { return true; },\n                isSurfaceDisabled: function () { return true; },\n                isUnbounded: function () { return true; },\n                registerDocumentInteractionHandler: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n                registerResizeHandler: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                updateCssVariable: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCRippleFoundation.prototype.init = function () {\n        var _this = this;\n        var supportsPressRipple = this.supportsPressRipple_();\n        this.registerRootHandlers_(supportsPressRipple);\n        if (supportsPressRipple) {\n            var _a = MDCRippleFoundation.cssClasses, ROOT_1 = _a.ROOT, UNBOUNDED_1 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.addClass(ROOT_1);\n                if (_this.adapter.isUnbounded()) {\n                    _this.adapter.addClass(UNBOUNDED_1);\n                    // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n                    _this.layoutInternal_();\n                }\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.destroy = function () {\n        var _this = this;\n        if (this.supportsPressRipple_()) {\n            if (this.activationTimer_) {\n                clearTimeout(this.activationTimer_);\n                this.activationTimer_ = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n            }\n            if (this.fgDeactivationRemovalTimer_) {\n                clearTimeout(this.fgDeactivationRemovalTimer_);\n                this.fgDeactivationRemovalTimer_ = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n            }\n            var _a = MDCRippleFoundation.cssClasses, ROOT_2 = _a.ROOT, UNBOUNDED_2 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.removeClass(ROOT_2);\n                _this.adapter.removeClass(UNBOUNDED_2);\n                _this.removeCssVars_();\n            });\n        }\n        this.deregisterRootHandlers_();\n        this.deregisterDeactivationHandlers_();\n    };\n    /**\n     * @param evt Optional event containing position information.\n     */\n    MDCRippleFoundation.prototype.activate = function (evt) {\n        this.activate_(evt);\n    };\n    MDCRippleFoundation.prototype.deactivate = function () {\n        this.deactivate_();\n    };\n    MDCRippleFoundation.prototype.layout = function () {\n        var _this = this;\n        if (this.layoutFrame_) {\n            cancelAnimationFrame(this.layoutFrame_);\n        }\n        this.layoutFrame_ = requestAnimationFrame(function () {\n            _this.layoutInternal_();\n            _this.layoutFrame_ = 0;\n        });\n    };\n    MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {\n        var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n        if (unbounded) {\n            this.adapter.addClass(UNBOUNDED);\n        }\n        else {\n            this.adapter.removeClass(UNBOUNDED);\n        }\n    };\n    MDCRippleFoundation.prototype.handleFocus = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    MDCRippleFoundation.prototype.handleBlur = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    /**\n     * We compute this property so that we are not querying information about the client\n     * until the point in time where the foundation requests it. This prevents scenarios where\n     * client-side feature-detection may happen too early, such as when components are rendered on the server\n     * and then initialized at mount time on the client.\n     */\n    MDCRippleFoundation.prototype.supportsPressRipple_ = function () {\n        return this.adapter.browserSupportsCssVars();\n    };\n    MDCRippleFoundation.prototype.defaultActivationState_ = function () {\n        return {\n            activationEvent: undefined,\n            hasDeactivationUXRun: false,\n            isActivated: false,\n            isProgrammatic: false,\n            wasActivatedByPointer: false,\n            wasElementMadeActive: false,\n        };\n    };\n    /**\n     * supportsPressRipple Passed from init to save a redundant function call\n     */\n    MDCRippleFoundation.prototype.registerRootHandlers_ = function (supportsPressRipple) {\n        var _this = this;\n        if (supportsPressRipple) {\n            ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n                _this.adapter.registerInteractionHandler(evtType, _this.activateHandler_);\n            });\n            if (this.adapter.isUnbounded()) {\n                this.adapter.registerResizeHandler(this.resizeHandler_);\n            }\n        }\n        this.adapter.registerInteractionHandler('focus', this.focusHandler_);\n        this.adapter.registerInteractionHandler('blur', this.blurHandler_);\n    };\n    MDCRippleFoundation.prototype.registerDeactivationHandlers_ = function (evt) {\n        var _this = this;\n        if (evt.type === 'keydown') {\n            this.adapter.registerInteractionHandler('keyup', this.deactivateHandler_);\n        }\n        else {\n            POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n                _this.adapter.registerDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterRootHandlers_ = function () {\n        var _this = this;\n        ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n            _this.adapter.deregisterInteractionHandler(evtType, _this.activateHandler_);\n        });\n        this.adapter.deregisterInteractionHandler('focus', this.focusHandler_);\n        this.adapter.deregisterInteractionHandler('blur', this.blurHandler_);\n        if (this.adapter.isUnbounded()) {\n            this.adapter.deregisterResizeHandler(this.resizeHandler_);\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterDeactivationHandlers_ = function () {\n        var _this = this;\n        this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n        POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n            _this.adapter.deregisterDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n        });\n    };\n    MDCRippleFoundation.prototype.removeCssVars_ = function () {\n        var _this = this;\n        var rippleStrings = MDCRippleFoundation.strings;\n        var keys = Object.keys(rippleStrings);\n        keys.forEach(function (key) {\n            if (key.indexOf('VAR_') === 0) {\n                _this.adapter.updateCssVariable(rippleStrings[key], null);\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.activate_ = function (evt) {\n        var _this = this;\n        if (this.adapter.isSurfaceDisabled()) {\n            return;\n        }\n        var activationState = this.activationState_;\n        if (activationState.isActivated) {\n            return;\n        }\n        // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n        var previousActivationEvent = this.previousActivationEvent_;\n        var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n        if (isSameInteraction) {\n            return;\n        }\n        activationState.isActivated = true;\n        activationState.isProgrammatic = evt === undefined;\n        activationState.activationEvent = evt;\n        activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');\n        var hasActivatedChild = evt !== undefined &&\n            activatedTargets.length > 0 &&\n            activatedTargets.some(function (target) { return _this.adapter.containsEventTarget(target); });\n        if (hasActivatedChild) {\n            // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n            this.resetActivationState_();\n            return;\n        }\n        if (evt !== undefined) {\n            activatedTargets.push(evt.target);\n            this.registerDeactivationHandlers_(evt);\n        }\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(evt);\n        if (activationState.wasElementMadeActive) {\n            this.animateActivation_();\n        }\n        requestAnimationFrame(function () {\n            // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n            activatedTargets = [];\n            if (!activationState.wasElementMadeActive\n                && evt !== undefined\n                && (evt.key === ' ' || evt.keyCode === 32)) {\n                // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n                // active states inconsistently when they're called within event handling code:\n                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n                // variable is set within a rAF callback for a submit button interaction (#2241).\n                activationState.wasElementMadeActive = _this.checkElementMadeActive_(evt);\n                if (activationState.wasElementMadeActive) {\n                    _this.animateActivation_();\n                }\n            }\n            if (!activationState.wasElementMadeActive) {\n                // Reset activation state immediately if element was not made active.\n                _this.activationState_ = _this.defaultActivationState_();\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.checkElementMadeActive_ = function (evt) {\n        return (evt !== undefined && evt.type === 'keydown') ?\n            this.adapter.isSurfaceActive() :\n            true;\n    };\n    MDCRippleFoundation.prototype.animateActivation_ = function () {\n        var _this = this;\n        var _a = MDCRippleFoundation.strings, VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;\n        var _b = MDCRippleFoundation.cssClasses, FG_DEACTIVATION = _b.FG_DEACTIVATION, FG_ACTIVATION = _b.FG_ACTIVATION;\n        var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n        this.layoutInternal_();\n        var translateStart = '';\n        var translateEnd = '';\n        if (!this.adapter.isUnbounded()) {\n            var _c = this.getFgTranslationCoordinates_(), startPoint = _c.startPoint, endPoint = _c.endPoint;\n            translateStart = startPoint.x + \"px, \" + startPoint.y + \"px\";\n            translateEnd = endPoint.x + \"px, \" + endPoint.y + \"px\";\n        }\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n        // Cancel any ongoing activation/deactivation animations\n        clearTimeout(this.activationTimer_);\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.rmBoundedActivationClasses_();\n        this.adapter.removeClass(FG_DEACTIVATION);\n        // Force layout in order to re-trigger the animation.\n        this.adapter.computeBoundingRect();\n        this.adapter.addClass(FG_ACTIVATION);\n        this.activationTimer_ = setTimeout(function () { return _this.activationTimerCallback_(); }, DEACTIVATION_TIMEOUT_MS);\n    };\n    MDCRippleFoundation.prototype.getFgTranslationCoordinates_ = function () {\n        var _a = this.activationState_, activationEvent = _a.activationEvent, wasActivatedByPointer = _a.wasActivatedByPointer;\n        var startPoint;\n        if (wasActivatedByPointer) {\n            startPoint = getNormalizedEventCoords(activationEvent, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect());\n        }\n        else {\n            startPoint = {\n                x: this.frame_.width / 2,\n                y: this.frame_.height / 2,\n            };\n        }\n        // Center the element around the start point.\n        startPoint = {\n            x: startPoint.x - (this.initialSize_ / 2),\n            y: startPoint.y - (this.initialSize_ / 2),\n        };\n        var endPoint = {\n            x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n            y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n        };\n        return { startPoint: startPoint, endPoint: endPoint };\n    };\n    MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady_ = function () {\n        var _this = this;\n        // This method is called both when a pointing device is released, and when the activation animation ends.\n        // The deactivation animation should only run after both of those occur.\n        var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n        var _a = this.activationState_, hasDeactivationUXRun = _a.hasDeactivationUXRun, isActivated = _a.isActivated;\n        var activationHasEnded = hasDeactivationUXRun || !isActivated;\n        if (activationHasEnded && this.activationAnimationHasEnded_) {\n            this.rmBoundedActivationClasses_();\n            this.adapter.addClass(FG_DEACTIVATION);\n            this.fgDeactivationRemovalTimer_ = setTimeout(function () {\n                _this.adapter.removeClass(FG_DEACTIVATION);\n            }, numbers.FG_DEACTIVATION_MS);\n        }\n    };\n    MDCRippleFoundation.prototype.rmBoundedActivationClasses_ = function () {\n        var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n        this.adapter.removeClass(FG_ACTIVATION);\n        this.activationAnimationHasEnded_ = false;\n        this.adapter.computeBoundingRect();\n    };\n    MDCRippleFoundation.prototype.resetActivationState_ = function () {\n        var _this = this;\n        this.previousActivationEvent_ = this.activationState_.activationEvent;\n        this.activationState_ = this.defaultActivationState_();\n        // Touch devices may fire additional events for the same interaction within a short time.\n        // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n        setTimeout(function () { return _this.previousActivationEvent_ = undefined; }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n    };\n    MDCRippleFoundation.prototype.deactivate_ = function () {\n        var _this = this;\n        var activationState = this.activationState_;\n        // This can happen in scenarios such as when you have a keyup event that blurs the element.\n        if (!activationState.isActivated) {\n            return;\n        }\n        var state = __assign({}, activationState);\n        if (activationState.isProgrammatic) {\n            requestAnimationFrame(function () { return _this.animateDeactivation_(state); });\n            this.resetActivationState_();\n        }\n        else {\n            this.deregisterDeactivationHandlers_();\n            requestAnimationFrame(function () {\n                _this.activationState_.hasDeactivationUXRun = true;\n                _this.animateDeactivation_(state);\n                _this.resetActivationState_();\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.animateDeactivation_ = function (_a) {\n        var wasActivatedByPointer = _a.wasActivatedByPointer, wasElementMadeActive = _a.wasElementMadeActive;\n        if (wasActivatedByPointer || wasElementMadeActive) {\n            this.runDeactivationUXLogicIfReady_();\n        }\n    };\n    MDCRippleFoundation.prototype.layoutInternal_ = function () {\n        var _this = this;\n        this.frame_ = this.adapter.computeBoundingRect();\n        var maxDim = Math.max(this.frame_.height, this.frame_.width);\n        // Surface diameter is treated differently for unbounded vs. bounded ripples.\n        // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n        // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n        // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n        // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n        // `overflow: hidden`.\n        var getBoundedRadius = function () {\n            var hypotenuse = Math.sqrt(Math.pow(_this.frame_.width, 2) + Math.pow(_this.frame_.height, 2));\n            return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n        };\n        this.maxRadius_ = this.adapter.isUnbounded() ? maxDim : getBoundedRadius();\n        // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n        var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n        // Unbounded ripple size should always be even number to equally center align.\n        if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n            this.initialSize_ = initialSize - 1;\n        }\n        else {\n            this.initialSize_ = initialSize;\n        }\n        this.fgScale_ = \"\" + this.maxRadius_ / this.initialSize_;\n        this.updateLayoutCssVars_();\n    };\n    MDCRippleFoundation.prototype.updateLayoutCssVars_ = function () {\n        var _a = MDCRippleFoundation.strings, VAR_FG_SIZE = _a.VAR_FG_SIZE, VAR_LEFT = _a.VAR_LEFT, VAR_TOP = _a.VAR_TOP, VAR_FG_SCALE = _a.VAR_FG_SCALE;\n        this.adapter.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + \"px\");\n        this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n        if (this.adapter.isUnbounded()) {\n            this.unboundedCoords_ = {\n                left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n                top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n            };\n            this.adapter.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + \"px\");\n            this.adapter.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + \"px\");\n        }\n    };\n    return MDCRippleFoundation;\n}(MDCFoundation));\nexport { MDCRippleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRippleFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}