{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses } from './constants';\n\nvar MDCLineRippleFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCLineRippleFoundation, _super);\n\n  function MDCLineRippleFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCLineRippleFoundation.defaultAdapter), adapter)) || this;\n\n    _this.transitionEndHandler_ = function (evt) {\n      return _this.handleTransitionEnd(evt);\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCLineRippleFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCLineRippleFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCLineRippleAdapter} for typing information on parameters and return types.\n     */\n    get: function () {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        hasClass: function () {\n          return false;\n        },\n        setStyle: function () {\n          return undefined;\n        },\n        registerEventHandler: function () {\n          return undefined;\n        },\n        deregisterEventHandler: function () {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCLineRippleFoundation.prototype.init = function () {\n    this.adapter.registerEventHandler('transitionend', this.transitionEndHandler_);\n  };\n\n  MDCLineRippleFoundation.prototype.destroy = function () {\n    this.adapter.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  };\n\n  MDCLineRippleFoundation.prototype.activate = function () {\n    this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  };\n\n  MDCLineRippleFoundation.prototype.setRippleCenter = function (xCoordinate) {\n    this.adapter.setStyle('transform-origin', xCoordinate + \"px center\");\n  };\n\n  MDCLineRippleFoundation.prototype.deactivate = function () {\n    this.adapter.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  };\n\n  MDCLineRippleFoundation.prototype.handleTransitionEnd = function (evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    var isDeactivating = this.adapter.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  };\n\n  return MDCLineRippleFoundation;\n}(MDCFoundation);\n\nexport { MDCLineRippleFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCLineRippleFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses } from './constants';\nvar MDCLineRippleFoundation = /** @class */ (function (_super) {\n    __extends(MDCLineRippleFoundation, _super);\n    function MDCLineRippleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCLineRippleFoundation.defaultAdapter), adapter)) || this;\n        _this.transitionEndHandler_ = function (evt) { return _this.handleTransitionEnd(evt); };\n        return _this;\n    }\n    Object.defineProperty(MDCLineRippleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCLineRippleFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCLineRippleAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                setStyle: function () { return undefined; },\n                registerEventHandler: function () { return undefined; },\n                deregisterEventHandler: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCLineRippleFoundation.prototype.init = function () {\n        this.adapter.registerEventHandler('transitionend', this.transitionEndHandler_);\n    };\n    MDCLineRippleFoundation.prototype.destroy = function () {\n        this.adapter.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    };\n    MDCLineRippleFoundation.prototype.activate = function () {\n        this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n        this.adapter.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n    };\n    MDCLineRippleFoundation.prototype.setRippleCenter = function (xCoordinate) {\n        this.adapter.setStyle('transform-origin', xCoordinate + \"px center\");\n    };\n    MDCLineRippleFoundation.prototype.deactivate = function () {\n        this.adapter.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    };\n    MDCLineRippleFoundation.prototype.handleTransitionEnd = function (evt) {\n        // Wait for the line ripple to be either transparent or opaque\n        // before emitting the animation end event\n        var isDeactivating = this.adapter.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n        if (evt.propertyName === 'opacity') {\n            if (isDeactivating) {\n                this.adapter.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n                this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n            }\n        }\n    };\n    return MDCLineRippleFoundation;\n}(MDCFoundation));\nexport { MDCLineRippleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCLineRippleFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}